services:
  postgres:
    container_name: postgres
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
    volumes:
      - ./init_databases.sql:/docker-entrypoint-initdb.d/init_databases.sql
    profiles:
      - cloud
      - local

  eureka:
    container_name: eureka
    image: eureka
    ports:
      - "8761:8761"
    build:
      context: ./eureka
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: cloud
      EUREKA_CLIENT_USERNAME: eureka_client
      EUREKA_CLIENT_PASSWORD: eureka_password
      PORT: 8761
    profiles:
      - cloud

  config:
    container_name: config
    image: config
    ports:
      - "8888:8888"
    build:
      context: ./config
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: native
      EUREKA_SERVER_URL: http://eureka_client:eureka_password@eureka:8761/eureka
      PORT: 8888
      CUSTOMER_NAME: customer
      NEWS_NAME: news
      FEED_NAME: feed
      CHAT_NAME: chat
      SUB_NAME: sub
      CUSTOMER_URL: customer
      NEWS_URL: news
      FEED_URL: feed
      CHAT_URL: chat
      SUB_URL: sub
      CUSTOMER_JDBC_URL: jdbc:postgresql://postgres:5432/customer
      CUSTOMER_DB_USER: username
      CUSTOMER_DB_PASSWORD: password
      SECRET: aGZiYmtiYWllYmNpZWFpZWJsZWNldWNlY2xhZWNhaWJlbGNhZWN3Q0VCV0VXSUM=
      ACCESS: 1
      REFRESH: 24
      CHAT_JDBC_URL: jdbc:postgresql://postgres:5432/chat
      CHAT_DB_USER: username
      CHAT_DB_PASSWORD: password
      NEWS_R2DBC_URL: r2dbc:postgresql://postgres:5432/news
      NEWS_JDBC_URL: jdbc:postgresql://postgres:5432/news
      NEWS_DB_USER: username
      NEWS_DB_PASSWORD: password
      FEED_JDBC_URL: jdbc:postgresql://postgres:5432/feed
      FEED_DB_USER: username
      FEED_DB_PASSWORD: password
      SUB_JDBC_URL: jdbc:postgresql://postgres:5432/sub
      SUB_DB_USER: username
      SUB_DB_PASSWORD: password
    depends_on:
      - eureka
    profiles:
      - cloud

  gateway:
    container_name: gateway
    image: gateway
    ports:
      - "8080:8080"
    build:
      context: ./gateway
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: cloud
      EUREKA_SERVER_URL: http://eureka_client:eureka_password@eureka:8761/eureka
      API_PREFIX: /api/v2
      PORT: 8080
    depends_on:
      - eureka
      - config
    profiles:
      - cloud

  customer:
    container_name: customer
    image: customer
    ports:
      - "8383:8383"
    build:
      context: ./customer
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: cloud
      EUREKA_SERVER_URL: http://eureka_client:eureka_password@eureka:8761/eureka
      PORT: 8383
    depends_on:
      - postgres
      - eureka
      - config
      - gateway
    profiles:
      - cloud

  feed:
    container_name: feed
    image: feed
    ports:
      - "8381:8381"
    build:
      context: ./feed
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: cloud
      EUREKA_SERVER_URL: http://eureka_client:eureka_password@eureka:8761/eureka
      PORT: 8381
    depends_on:
      - postgres
      - eureka
      - config
      - gateway
    profiles:
      - cloud

  news:
    container_name: news
    image: news
    ports:
      - "8387:8387"
    build:
      context: ./news
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: cloud
      EUREKA_SERVER_URL: http://eureka_client:eureka_password@eureka:8761/eureka
      PORT: 8387
    depends_on:
      - postgres
      - eureka
      - config
      - gateway
    profiles:
      - cloud

  chat:
    container_name: chat
    image: chat
    ports:
      - "8382:8382"
    build:
      context: ./chat
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: cloud
      EUREKA_SERVER_URL: http://eureka_client:eureka_password@eureka:8761/eureka
      PORT: 8382
    depends_on:
      - postgres
      - eureka
      - config
      - gateway
    profiles:
      - cloud

  sub:
    container_name: sub
    image: sub
    ports:
      - "8084:8084"
    build:
      context: ./sub
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: cloud
      EUREKA_SERVER_URL: http://eureka_client:eureka_password@eureka:8761/eureka
      API_PREFIX: /api/v2
      PORT: 8084
    depends_on:
      - eureka
      - config
    profiles:
      - cloud
